// Code generated by mfd-generator v0.6.0; DO NOT EDIT.

//nolint:all
//lint:file-ignore U1000 ignore unused code, it's generated
package db

import (
	"time"
)

var Columns = struct {
	User struct {
		ID, CreatedAt, Login, Password, AuthKey, LastActivityAt, StatusID, TelegramID, TelegramUsername, TeleramFirstName, TelegramLastName string
	}
	Category struct {
		ID, UserID, Title, Alias, CreatedAt, UpdatedAt, StatusID, Emoji string

		User string
	}
	Expense struct {
		ID, UserID, CategoryID, Amount, Description, CreatedAt, UpdatedAt, StatusID, Currency string

		User, Category string
	}
}{
	User: struct {
		ID, CreatedAt, Login, Password, AuthKey, LastActivityAt, StatusID, TelegramID, TelegramUsername, TeleramFirstName, TelegramLastName string
	}{
		ID:               "userId",
		CreatedAt:        "createdAt",
		Login:            "login",
		Password:         "password",
		AuthKey:          "authKey",
		LastActivityAt:   "lastActivityAt",
		StatusID:         "statusId",
		TelegramID:       "telegramId",
		TelegramUsername: "telegramUsername",
		TeleramFirstName: "teleramFirstName",
		TelegramLastName: "telegramLastName",
	},
	Category: struct {
		ID, UserID, Title, Alias, CreatedAt, UpdatedAt, StatusID, Emoji string

		User string
	}{
		ID:        "categoryId",
		UserID:    "userId",
		Title:     "title",
		Alias:     "alias",
		CreatedAt: "createdAt",
		UpdatedAt: "updatedAt",
		StatusID:  "statusId",
		Emoji:     "emoji",

		User: "User",
	},
	Expense: struct {
		ID, UserID, CategoryID, Amount, Description, CreatedAt, UpdatedAt, StatusID, Currency string

		User, Category string
	}{
		ID:          "expenseId",
		UserID:      "userId",
		CategoryID:  "categoryId",
		Amount:      "amount",
		Description: "description",
		CreatedAt:   "createdAt",
		UpdatedAt:   "updatedAt",
		StatusID:    "statusId",
		Currency:    "currency",

		User:     "User",
		Category: "Category",
	},
}

var Tables = struct {
	User struct {
		Name, Alias string
	}
	Category struct {
		Name, Alias string
	}
	Expense struct {
		Name, Alias string
	}
}{
	User: struct {
		Name, Alias string
	}{
		Name:  "users",
		Alias: "t",
	},
	Category: struct {
		Name, Alias string
	}{
		Name:  "categories",
		Alias: "t",
	},
	Expense: struct {
		Name, Alias string
	}{
		Name:  "expenses",
		Alias: "t",
	},
}

type User struct {
	tableName struct{} `pg:"users,alias:t,discard_unknown_columns"`

	ID               int        `pg:"userId,pk"`
	CreatedAt        time.Time  `pg:"createdAt,use_zero"`
	Login            string     `pg:"login,use_zero"`
	Password         string     `pg:"password,use_zero"`
	AuthKey          string     `pg:"authKey,use_zero"`
	LastActivityAt   *time.Time `pg:"lastActivityAt"`
	StatusID         int        `pg:"statusId,use_zero"`
	TelegramID       int64      `pg:"telegramId,use_zero"`
	TelegramUsername string     `pg:"telegramUsername,use_zero"`
	TeleramFirstName *string    `pg:"teleramFirstName"`
	TelegramLastName *string    `pg:"telegramLastName"`
}

type Category struct {
	tableName struct{} `pg:"categories,alias:t,discard_unknown_columns"`

	ID        int       `pg:"categoryId,pk"`
	UserID    int       `pg:"userId,use_zero"`
	Title     string    `pg:"title,use_zero"`
	Alias     *string   `pg:"alias"`
	CreatedAt time.Time `pg:"createdAt,use_zero"`
	UpdatedAt time.Time `pg:"updatedAt,use_zero"`
	StatusID  int       `pg:"statusId,use_zero"`
	Emoji     *string   `pg:"emoji"`

	User *User `pg:"fk:userId,rel:has-one"`
}

type Expense struct {
	tableName struct{} `pg:"expenses,alias:t,discard_unknown_columns"`

	ID          int       `pg:"expenseId,pk"`
	UserID      int       `pg:"userId,use_zero"`
	CategoryID  *int      `pg:"categoryId"`
	Amount      int64     `pg:"amount,use_zero"`
	Description string    `pg:"description,use_zero"`
	CreatedAt   time.Time `pg:"createdAt,use_zero"`
	UpdatedAt   time.Time `pg:"updatedAt,use_zero"`
	StatusID    int       `pg:"statusId,use_zero"`
	Currency    string    `pg:"currency,use_zero"`

	User     *User     `pg:"fk:userId,rel:has-one"`
	Category *Category `pg:"fk:categoryId,rel:has-one"`
}
